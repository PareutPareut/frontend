{"_id":"generator","_rev":"35-e8aaf9793a63b0b40d9ba149d7afee47","name":"generator","description":"Project bootstrapping with an emphasis on simplicity.","dist-tags":{"latest":"1.0.1"},"versions":{"0.0.1":{"author":{"name":"Andrew Sliwinski","email":"andrewsliwinski@acm.org","url":"http://andrewsliwinski.com"},"name":"generator","description":"A simple project bootstrapping utility.","keywords":["bootstrap","project","template","automation"],"version":"0.0.1","homepage":"https://github.com/thisandagain/generator","repository":{"type":"git","url":"git://github.com/thisandagain/generator.git"},"main":"./lib/index.js","bin":{"generator":"./bin/index.js","generate":"./bin/index.js"},"scripts":{"test":"tap ./test/*.js"},"dependencies":{"async":"~0.1.22","colors":"~0.6.0-1","commander":"~1.0.4","fs-extra":"~0.2.1","findit":"~0.1.2"},"devDependencies":{"tap":"~0.3.1","codebux":"~0.1.2"},"optionalDependencies":{},"engines":{"node":">=0.6"},"preferGlobal":true,"_npmUser":{"name":"diy","email":"help@diy.org"},"_id":"generator@0.0.1","_engineSupported":true,"_npmVersion":"1.1.21","_nodeVersion":"v0.6.17","_defaultsLoaded":true,"dist":{"shasum":"9aaff123a1f581fdc2aeb6485102187532e088de","tarball":"https://registry.npmjs.org/generator/-/generator-0.0.1.tgz","integrity":"sha512-02iCkNBSVsZya8NX5gTIN/mv75dUWWOPOgu8B9PoaI5JJibVq34qhb6q+3trSktW01i9s1vJM9EATeT2NxQGKA==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDP4HiEZlUdAB/HAUCCD6MR8OC0Hx5PPa6w5jk7k7egNgIgFjFhLNyr94m2nooiI1s1FKMqPxM0t2ix2SmdwPsROGc="}]},"maintainers":[{"name":"diy","email":"help@diy.org"}],"directories":{}},"0.0.2":{"author":{"name":"Andrew Sliwinski","email":"andrewsliwinski@acm.org","url":"http://andrewsliwinski.com"},"name":"generator","description":"A simple project bootstrapping utility.","keywords":["bootstrap","project","template","automation"],"version":"0.0.2","homepage":"https://github.com/thisandagain/generator","repository":{"type":"git","url":"git://github.com/thisandagain/generator.git"},"main":"./lib/index.js","bin":{"generator":"./bin/index.js","generate":"./bin/index.js"},"scripts":{"test":"tap ./test/*.js"},"dependencies":{"async":"~0.1.22","colors":"~0.6.0-1","commander":"~1.0.4","fs-extra":"~0.2.1","findit":"~0.1.2"},"devDependencies":{"tap":"~0.3.1","codebux":"~0.1.2"},"optionalDependencies":{},"engines":{"node":">=0.6"},"preferGlobal":true,"_npmUser":{"name":"diy","email":"help@diy.org"},"_id":"generator@0.0.2","_engineSupported":true,"_npmVersion":"1.1.21","_nodeVersion":"v0.6.17","_defaultsLoaded":true,"dist":{"shasum":"abc58928a368803b55603c6f17757e59f99e8de3","tarball":"https://registry.npmjs.org/generator/-/generator-0.0.2.tgz","integrity":"sha512-HJthUcjNurXBCVyWIrvLnVfByDMT00kujV4C2olcpHvKUJUajBT+iGsRF4ma7sl476ZcLcfoaKqt+Skfa7cKGQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDDJMvBp7KKhpPIzx4bkfzLUPNtASn1SsaDhbVHz+m5IwIhAMcWP/rxwWd16H/DR26FKIbuNw3LZ4kK8LQexuG0YVQJ"}]},"maintainers":[{"name":"diy","email":"help@diy.org"}],"directories":{}},"0.0.3":{"author":{"name":"Andrew Sliwinski","email":"andrewsliwinski@acm.org","url":"http://andrewsliwinski.com"},"name":"generator","description":"A simple project bootstrapping utility.","keywords":["bootstrap","project","template","automation"],"version":"0.0.3","homepage":"https://github.com/thisandagain/generator","repository":{"type":"git","url":"git://github.com/thisandagain/generator.git"},"main":"./lib/index.js","bin":{"generator":"./bin/index.js","generate":"./bin/index.js"},"scripts":{"test":"tap ./test/*.js"},"dependencies":{"async":"~0.1.22","colors":"~0.6.0-1","commander":"~1.0.4","fs-extra":"~0.2.1","findit":"~0.1.2"},"devDependencies":{"tap":"~0.3.1","codebux":"~0.1.2"},"optionalDependencies":{},"engines":{"node":">=0.6"},"preferGlobal":true,"_npmUser":{"name":"diy","email":"help@diy.org"},"_id":"generator@0.0.3","_engineSupported":true,"_npmVersion":"1.1.21","_nodeVersion":"v0.6.17","_defaultsLoaded":true,"dist":{"shasum":"b01719546b36b821688745b838cbfca80bc32c9e","tarball":"https://registry.npmjs.org/generator/-/generator-0.0.3.tgz","integrity":"sha512-eJoRpSTat32NmnMxr8VKlMazsC8x98WU3htjrT5GNbnFuw+u1QhRqe+UfgZrzANj0MV/wniu2wBG1dGDugKD8w==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDDt3EN5qXgBm9RUIwjrwvNK5q2mdddrouYbw3m2qXSZQIhAKyd4pritMckRJM2+S9CNceVLftMEEfYwlVxEiba6Jy/"}]},"maintainers":[{"name":"diy","email":"help@diy.org"}],"directories":{}},"0.0.4":{"author":{"name":"Andrew Sliwinski","email":"andrewsliwinski@acm.org","url":"http://andrewsliwinski.com"},"name":"generator","description":"A simple project bootstrapping utility.","keywords":["bootstrap","project","template","automation"],"version":"0.0.4","homepage":"https://github.com/thisandagain/generator","repository":{"type":"git","url":"git://github.com/thisandagain/generator.git"},"main":"./lib/index.js","bin":{"generator":"./bin/index.js","generate":"./bin/index.js"},"scripts":{"test":"tap ./test/*.js"},"dependencies":{"async":"~0.1.22","colors":"~0.6.0-1","commander":"~1.0.4","fs-extra":"~0.2.1","findit":"~0.1.2"},"devDependencies":{"tap":"~0.3.1","codebux":"~0.1.2"},"optionalDependencies":{},"engines":{"node":">=0.6"},"preferGlobal":true,"_npmUser":{"name":"diy","email":"help@diy.org"},"_id":"generator@0.0.4","_engineSupported":true,"_npmVersion":"1.1.21","_nodeVersion":"v0.6.17","_defaultsLoaded":true,"dist":{"shasum":"5f7c4e8d8518f65ebb621eb9431ba436ab4b8d6c","tarball":"https://registry.npmjs.org/generator/-/generator-0.0.4.tgz","integrity":"sha512-/PAzqPRIZVJMtTXA4jH+iHO9PR2hxl6IsIXU2+z7pcoSlKzs2ec4J6YPF2WhHKnwyTYm5O20AYiXH6fEMe7crg==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIExk4EeVt+NrT8tpiVSGIn2QvJATMoooplgTkHA2tsLuAiEAmU2ZnR9LYUqCdAecKywzi7gIjAk2lignRZ12/6tfWJE="}]},"maintainers":[{"name":"diy","email":"help@diy.org"}],"directories":{}},"1.0.0":{"author":{"name":"Andrew Sliwinski","email":"andrewsliwinski@acm.org","url":"http://andrewsliwinski.com"},"name":"generator","description":"Project bootstrapping with an emphasis on simplicity.","keywords":["template","scaffold","scaffolding","bootstrap","utility"],"version":"1.0.0","homepage":"https://github.com/thisandagain/generator","license":"MIT","repository":{"type":"git","url":"https://github.com/thisandagain/generator.git"},"preferGlobal":true,"main":"./lib/index.js","bin":{"generator":"./bin/index.js","generate":"./bin/index.js"},"scripts":{"test":"make test"},"dependencies":{"async":"~0.2.9","colors":"~0.6.2","findit":"~0.1.2","fs-extra":"~0.6.3","prompt":"~0.2.11","optimist":"~0.6.0","replace":"~0.2.7"},"devDependencies":{"hint-hint":"~0.3.0","tap":"~0.4.4"},"optionalDependencies":{},"engines":{"node":">=0.8"},"readme":"## Generator\n#### Good coders code. Great reuse.\nGenerator is a CLI utility that is designed to make bootstrapping and templating projects simple. Generator is platform agnostic: Like Node.js? Saucy. Ruby? Sounds good. Objective-C? Go for it. Go? Yup. Fortran? Why not.\n\n[![Build Status](https://secure.travis-ci.org/thisandagain/generator.png)](http://travis-ci.org/thisandagain/generator)\n\n### Installation\nGenerator can be installed using [NPM](https://npmjs.org/):\n```bash\n[sudo] npm install -g generator\n```\n\nOnce installed, you should load the default templates:\n```bash\ngenerator --setup\n```\n\n### Usage\nIn order to bootstrap a project using one of the default templates you simply run `generator` and specifiy a template and project name. For example, let's create a new Node.js module called `myAwesomeProject`:\n```bash\ngenerator --template npm --name myAwesomeProject\n```\n\n---\n\n### Default Templates\nGenerator comes with a few templates to get you started. While they are usable as-is, the whole point of Generator is make the creation of custom templates easy... so hack your own!\n\n- `npm` [NPM](https://npmjs.org/) module template\n- `arduino` [Arduino](http://www.arduino.cc/) project template\n\n### How Templates Work\nTemplates are simply directories with any combination of files and sub-directories found within them. To create a new template simply create a new directory within your `~/.generator` path or copy one of the default templates and modify it. Upon use, Generator will walk the template looking for any instances of `__somelowercasevariable__` and prompt for a value. For example, a template including this:\n\n```javascript\n/**\n * __description__\n *\n * @package __name__\n * @author __author__ <__email__>\n */\n```\n\nWill prompt:\n```bash\ndescription: Rainbow catsplosion.\nauthor: Nyan Cat\nemail: kitty@meow.com\n```\n\nWhich will generate:\n```javascript\n/**\n * Rainbow catsplosion.\n *\n * @package myAwesomeProject\n * @author Nyan Cat <kitty@meow.com>\n */\n```\n\n---\n\n### Post Processing\nBy default, Generator will look for a `makefile` and (if found) will run `make generator` after all other template processing has been completed. This is particularly handy for dealing with template dependencies that may change over time (like git repositories or even [NPM](https://npmjs.org/) modules). For example:\n\n```bash\ngenerator:\n    npm install\n\n.PHONY: generator\n```\n\nOr... heck, let's go crazy nuts and automate setting up our git repo:\n\n```bash\ngenerator:\n    git init\n    git remote add origin https://github.com/__github__/__name__\n    npm install\n\n.PHONY: generator\n```\n\n---\n\n### Testing\n```bash\nnpm test\n```\n\n### Notes\n- C, C++, and PHP often use the `__SOMETHING__` pattern for [macros](http://gcc.gnu.org/onlinedocs/gcc-3.1/cpp/Standard-Predefined-Macros.html). For this reason, Generator will ignore any variable instances that are specified in caps. This works fine for C and C++ users, but given that such macros in PHP are case insensitive, PHP users should keep this limitation in mind while designing templates.\n- \"Good coders code. Great reuse.\" quote shamelessly stolen from [Peteris Krumins' blog](http://www.catonmat.net/) (which you should read).\n","readmeFilename":"README.md","_id":"generator@1.0.0","dist":{"shasum":"a544136a7d3ac7c5e28146252b61f27087957ee3","tarball":"https://registry.npmjs.org/generator/-/generator-1.0.0.tgz","integrity":"sha512-LtOsB2SF/4FtrWOn6ss03jtgNBgZrdAjgvsKAkQPhLwdSPW42d1p1BvvsBAPqGpfbdFao9f31ZjD24iW8soxNA==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQClXT0MP4pGow+/dP31kGqGbA5f2+1LFPMR2urHTBy7XAIhAJRHCgQKxO7Io1WKKhh4lAxA4+ZHIOb6vdPFITAk6Drs"}]},"_from":".","_npmVersion":"1.2.11","_npmUser":{"name":"diy","email":"help@diy.org"},"maintainers":[{"name":"diy","email":"help@diy.org"}]},"1.0.1":{"author":{"name":"Andrew Sliwinski","email":"andrewsliwinski@acm.org","url":"http://andrewsliwinski.com"},"name":"generator","description":"Project bootstrapping with an emphasis on simplicity.","keywords":["template","scaffold","scaffolding","bootstrap","utility"],"version":"1.0.1","homepage":"https://github.com/thisandagain/generator","license":"MIT","repository":{"type":"git","url":"https://github.com/thisandagain/generator.git"},"preferGlobal":true,"main":"./lib/index.js","bin":{"generator":"./bin/index.js","generate":"./bin/index.js"},"scripts":{"test":"make test"},"dependencies":{"async":"~0.2.9","colors":"~0.6.2","findit":"~0.1.2","fs-extra":"~0.6.3","prompt":"~0.2.11","optimist":"~0.6.0","replace":"~0.2.7"},"devDependencies":{"hint-hint":"~0.3.0","tap":"~0.4.4"},"optionalDependencies":{},"engines":{"node":">=0.8"},"readme":"## Generator [![Build Status](https://secure.travis-ci.org/thisandagain/generator.png)](http://travis-ci.org/thisandagain/generator)\n#### Language agnostic project bootstrapping with an emphasis on simplicity.\n\n![Screenshot](https://raw.github.com/thisandagain/generator/master/interface.png)\n\n### Installation\n```bash\n[sudo] npm install -g generator\n```\n\nOnce installed, you should load the default templates:\n```bash\ngenerate --setup\n```\n\n### Usage\nIn order to bootstrap a project using one of the default templates you simply run `generate` and specifiy a template and project name. For example, let's create a new Node.js module called `kittycannon`:\n```bash\ngenerate --template npm --name kittycannon\n```\n\n---\n\n### Default Templates\nGenerator comes with a few templates to get you started. While they are usable as-is, the whole point of Generator is make the creation of custom templates as simple as possible.\n\n- `npm` [NPM](https://npmjs.org/) module template\n- `arduino` [Arduino](http://www.arduino.cc/) project template\n\n### How Templates Work\nTemplates are simply directories with any combination of files and sub-directories found within them. To create a new template simply create a new directory within your `~/.generator` path or copy one of the default templates and modify it. Upon use, Generator will walk the template looking for any instances of `__somelowercasevariable__` and prompt for a value. For example, a template including this:\n\n```javascript\n/**\n * __description__\n *\n * @package __name__\n * @author __author__ <__email__>\n */\n```\n\nWill prompt:\n```bash\ndescription: Rainbow catsplosion.\nauthor: Nyan Cat\nemail: kitty@meow.com\n```\n\nWhich will generate:\n```javascript\n/**\n * Rainbow catsplosion.\n *\n * @package myAwesomeProject\n * @author Nyan Cat <kitty@meow.com>\n */\n```\n\n---\n\n### Post Processing\nBy default, Generator will look for a `makefile` and (if found) will run `make generator` after all other template processing has been completed. This is particularly handy for dealing with template dependencies that may change over time (like git repositories or even [NPM](https://npmjs.org/) modules). For example:\n\n```bash\ngenerator:\n    npm install\n\n.PHONY: generator\n```\n\nOr... heck, let's go crazy nuts and automate setting up our git repo:\n\n```bash\ngenerator:\n    git init\n    git remote add origin https://github.com/__github__/__name__\n    npm install\n\n.PHONY: generator\n```\n\n---\n\n### Testing\n```bash\nnpm test\n```\n\n### Notes\n- C, C++, and PHP often use the `__SOMETHING__` pattern for [macros](http://gcc.gnu.org/onlinedocs/gcc-3.1/cpp/Standard-Predefined-Macros.html). For this reason, Generator will ignore any variable instances that are specified in caps. This works fine for C and C++ users, but given that such macros in PHP are case insensitive, PHP users should keep this limitation in mind while designing templates.\n- \"Good coders code. Great reuse.\" quote shamelessly stolen from [Peteris Krumins' blog](http://www.catonmat.net/) (which you should read).\n","readmeFilename":"README.md","_id":"generator@1.0.1","dist":{"shasum":"01fe5f576dab7a1ed51f5e19ef4362a2fe079567","tarball":"https://registry.npmjs.org/generator/-/generator-1.0.1.tgz","integrity":"sha512-95SPjlO2LzUfRgmlAlbJzB+QInT0ftmfcS98o8gU5oG3UOpaxOC2/6fPiFO0HO+RPcoZc2QadfgbRSKq6EqOLQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIDaXYDPDOizwd/SbDvKrlHSTqjxXboZWaTdDGD32WPZWAiALrwUeYpCvjWPgsGDAPLVF3ao+rJA2DnYjNDyqQ8OZPA=="}]},"_from":".","_npmVersion":"1.2.11","_npmUser":{"name":"diy","email":"help@diy.org"},"maintainers":[{"name":"diy","email":"help@diy.org"}]}},"readme":"## Generator\nA simple project bootstrapping utility.\n\n### Installation\n```bash\n[sudo] npm install -g generator\ngenerate --setup\n```\n\n### Basic Use\n```bash\ngenerate -t module -n myAwesomeProject\n```\n\n### Creating A New Template\nTemplates are simply directories with any combination of files and sub-directories found within them. To create a new template simply create a new directory within your `~/.generator` path or copy one of the default templates and modify it. Upon use, Generator will walk the template looking for any instances of `__yourVariableName__` and prompt for a value. For example, a template including this:\n\n```javascript\n/**\n * __description__\n *\n * @package __name__\n * @author __author__ <__email__>\n */\n```\n\nWill prompt:\n```bash\ndescription: A description of my project\nauthor: Nyan Cat\nemail: me@somedomain.com\n```\n\nWhich will then write:\n```javascript\n/**\n * A description of my project\n *\n * @package myAwesomeProject\n * @author Nyan Cat <me@somedomain.com>\n */\n```\n\n---\n\n### Default Templates\nGenerator comes with a number of templates to get you started (additional \"starter\" templates are welcomed). While they are usable as-is, the whole point of Generator is make the creation and modification of custom templates easy... so go get your hands dirty and hack your own!\n`module` - Template for a standard [Node.js](http://nodejs.org/) module\n`binary` - Template for a standard [Node.js](http://nodejs.org/) CLI application\n`arduino` - Template for a basic [Arduino](http://www.arduino.cc/) project\n\n---\n\n### Testing\n```bash\nnpm test\n```","maintainers":[{"name":"diy","email":"help@diy.org"}],"time":{"modified":"2022-06-18T05:24:13.931Z","created":"2012-10-01T21:29:44.352Z","0.0.1":"2012-10-01T21:29:45.752Z","0.0.2":"2012-10-02T01:57:02.911Z","0.0.3":"2012-10-02T17:54:26.223Z","0.0.4":"2012-10-08T22:51:40.410Z","1.0.0":"2013-09-06T05:16:01.740Z","1.0.1":"2013-09-09T21:58:59.169Z"},"author":{"name":"Andrew Sliwinski","email":"andrewsliwinski@acm.org","url":"http://andrewsliwinski.com"},"repository":{"type":"git","url":"https://github.com/thisandagain/generator.git"},"users":{"kitbs":true,"justincone":true}}